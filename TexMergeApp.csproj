<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->

        <!-- Note for MacCatalyst:
            The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
            When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
            The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
            either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
        <!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

        <OutputType>Exe</OutputType>
        <RootNamespace>TexMergeApp</RootNamespace>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>
        <EnableDefaultCssItems>false</EnableDefaultCssItems>
        <Nullable>enable</Nullable>  

        <!-- Display name -->
        <ApplicationTitle>TexMergeApp</ApplicationTitle>

        <!-- App Identifier -->
        <ApplicationId>com.turnpointgames.texmergeapp</ApplicationId>

        <!-- Versions -->
        <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
        <ApplicationVersion>1</ApplicationVersion>

        <!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
        <WindowsPackageType>None</WindowsPackageType>

        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>

        <PublishSingleFile>false</PublishSingleFile>
        <PublishTrimmed>false</PublishTrimmed>
        <EnableComHosting>true</EnableComHosting>

        <SuppressTrimAnalysisWarnings>true</SuppressTrimAnalysisWarnings>
        <SelfContained>false</SelfContained>
        <IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>
        <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
        <Platforms>AnyCPU;x64</Platforms>
        <EnableDefaultItems>true</EnableDefaultItems>
        <StaticWebAssetBasePath>/</StaticWebAssetBasePath>
        <IncludeSatelliteAssembliesForPublish>false</IncludeSatelliteAssembliesForPublish>
        <SatelliteResourceLanguages>en-us;en-GB</SatelliteResourceLanguages>
    </PropertyGroup>

    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

        <!-- Custom Fonts -->
        <MauiFont Include="Resources\Fonts\*" />    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Magick.NET-Q16-AnyCPU" Version="14.6.0" />
        <PackageReference Include="Microsoft.Maui.Controls" Version="8.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="8.0.3" />
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.0" />
        <PackageReference Include="MudBlazor" Version="8.9.0" />
        <PackageReference Include="MudBlazor.Extensions" Version="8.9.0" />
    </ItemGroup>

    <Target Name="RemoveMuiFolders" AfterTargets="Publish">
      <!-- Collect all .mui files except those under en-US -->
      <ItemGroup>
        <MuiFiles Include="$(PublishDir)**\*.mui" Exclude="$(PublishDir)**\en-US\**\*.mui" />
      </ItemGroup>

      <!-- Derive unique parent folders -->
      <ItemGroup>
        <MuiFoldersToDelete Include="@(MuiFiles->'%(RootDir)%(Directory)')" />
        <MuiFoldersToDelete Remove="@(MuiFoldersToDelete)" Condition="'%(MuiFoldersToDelete.Identity)' == '$(PublishDir)en-US\'" />
      </ItemGroup>

      <!-- Delete each folder -->
      <Message Text="Deleting folders with .mui files (excluding en-US)..." />
      <RemoveDir Directories="@(MuiFoldersToDelete -&gt; Distinct())" />
    </Target>
</Project>
